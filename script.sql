create extension if not exists ai cascade;

-- create a table for the news articles
-- the embedding column will store embeddings from openai
-- the tsv column will store the full-text-search vector
create table cnn_daily_mail( 
    id bigint not null primary key generated by default as identity,
    highlights text, 
    article text,
    embedding vector(1536), 
    tsv tsvector generated always as (to_tsvector('english', article)) stored
);

-- index the full-text-search vector
create index on cnn_daily_mail using gin (tsv);


-- return number of rows in the table
select count(*) from cnn_daily_mail;

-- generate the embeddings for every article
update cnn_daily_mail 
set embedding = ai.openai_embed('text-embedding-ada-002', article);


-- return the number of articles for which we don't have embeddings
-- this should be 0 after generating our embeddings.
select count(*) from cnn_daily_mail where embedding is null;


-- index the embeddings
-- this index uses the pgvector HNSW (hierarchical navigable small world) algorithm 
-- which is efficient for nearest-neighbor searches in high-dimensional spaces.
create index on cnn_daily_mail using hnsw (embedding vector_cosine_ops);
